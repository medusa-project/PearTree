##
# N.B. 1: Connection settings should not be edited in this file; use
# `bin/rails credentials:edit` instead.
#
# N.B. 2: The "*_2" databases enable the use of separate connection pools.
# The use case for this is to be able to update certain ActiveRecord instances
# from inside `ActiveRecord::Base.transaction` blocks and for those updates to
# be visible outside of the transaction. (See the Task model, for example.)
#

<%
path        = File.join(Rails.root, 'config', 'credentials', 'development.yml')
dev_config  = File.exists?(path) ? YAML.load(File.read(path)) : {}
path        = File.join(Rails.root, 'config', 'credentials', 'test.yml')
test_config = File.exists?(path) ? YAML.load(File.read(path)) : {}
delayed_job = (ENV['DELAYED_JOB'] == '1')
%>

default: &default
  adapter:      postgresql
  encoding:     unicode
  pool:         <%= (ENV.fetch("WEB_CONCURRENCY") { 1 }).to_i * (ENV.fetch("RAILS_MAX_THREADS") { 5 }).to_i %>
  timeout:      5000
  min_messages: warning
  template:     template0

development: &development
  <<: *default
  host:     <%= dev_config['db_host'] %>
  port:     <%= dev_config['db_port'] %>
  database: <%= dev_config['db_database'] %>
  username: <%= dev_config['db_username'] %>
  password: <%= dev_config['db_password'] %>
  pool: <%= delayed_job ? 50 : 5 %>

development_2:
  <<: *development

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test: &test
  <<: *default
  host:     <%= test_config['db_host'] %>
  port:     <%= test_config['db_port'] %>
  database: <%= test_config['db_database'] %>
  username: <%= test_config['db_username'] %>
  password: <%= test_config['db_password'] %>

test_2:
  <<: *test

demo_and_production: &demo_and_production
  <<: *default
  host:     <%= Rails.application.credentials.dig(:db_host) %>
  port:     <%= Rails.application.credentials.dig(:db_port) %>
  database: <%= Rails.application.credentials.dig(:db_database) %>
  username: <%= Rails.application.credentials.dig(:db_username) %>
  password: <%= Rails.application.credentials.dig(:db_password) %>

demo: &demo
  <<: *demo_and_production
  # An optimal number for Puma is RAILS_MAX_THREADS * WEB_CONCURRENCY (see
  # puma.rb). However, we want to increase the parallelism of the various OCR
  # jobs, which employ multi-threading in order to not take forever.
  pool: <%= delayed_job ? 105 : (ENV.fetch("WEB_CONCURRENCY") { 1 }).to_i * (ENV.fetch("RAILS_MAX_THREADS") { 5 }).to_i %>

demo_2:
  <<: *demo
  pool: 1

production: &production
  <<: *demo_and_production
  pool: <%= delayed_job ? 505 : (ENV.fetch("WEB_CONCURRENCY") { 1 }).to_i * (ENV.fetch("RAILS_MAX_THREADS") { 5 }).to_i %>

production_2:
  <<: *production
  pool: 1